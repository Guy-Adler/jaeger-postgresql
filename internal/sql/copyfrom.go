// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: copyfrom.go

package sql

import (
	"context"
)

// iteratorForInsertSpanRefs implements pgx.CopyFromSource.
type iteratorForInsertSpanRefs struct {
	rows                 []InsertSpanRefsParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertSpanRefs) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertSpanRefs) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].SourceSpanID,
		r.rows[0].ChildSpanID,
		r.rows[0].TraceID,
		r.rows[0].RefType,
	}, nil
}

func (r iteratorForInsertSpanRefs) Err() error {
	return nil
}

func (q *Queries) InsertSpanRefs(ctx context.Context, arg []InsertSpanRefsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"spanrefs"}, []string{"source_span_id", "child_span_id", "trace_id", "ref_type"}, &iteratorForInsertSpanRefs{rows: arg})
}
